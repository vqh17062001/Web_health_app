@page "/assessmentbatch/edit/{AssessmentBatchId}"
@using Microsoft.AspNetCore.Authorization
@using Web_health_app.Web.Components.Layout
@using Web_health_app.Models.Models
@using Web_health_app.Web.ApiClients
@using Microsoft.JSInterop
@inject AssessmentBatchApiClient AssessmentBatchApiClient
@inject UserApiClient UserApiClient
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

@layout EmptyLayout
@attribute [Authorize(Roles = "ACCESS.EditAssessmentBatch")]


<PageTitle>Chỉnh sửa đợt kiểm tra - @(assessmentBatch?.CodeName ?? "Loading...")</PageTitle>

<link href="/css/AssessmentBatch/edit-assessment-batch.css" rel="stylesheet" />

<div class="edit-assessment-container">
    @if (isLoading)
    {
        <div class="loading-state">
            <div class="spinner-wrapper">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p class="loading-text">Đang tải thông tin đợt kiểm tra...</p>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="error-state">
            <div class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-triangle"></i>
                @errorMessage
            </div>
            <button class="btn btn-secondary" @onclick="GoBack">
                <i class="fas fa-arrow-left"></i> Quay lại
            </button>
        </div>
    }
    else if (assessmentBatch != null)
    {
    <div class="edit-assessment-card">
        <!-- Header -->
        <div class="card-header">
            <div class="header-content">
                <div class="header-icon">
                    <i class="fas fa-edit"></i>
                </div>
                <div class="header-text">
                    <h2>Chỉnh Sửa Đợt Kiểm Tra Thể Lực</h2>
                    <p>Cập nhật thông tin và cấu hình đợt kiểm tra</p>
                </div>
            </div>
                <button type="button" class="btn-close" @onclick="GoBack">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <!-- Form Body -->
        <div class="card-body">
            <form class="edit-assessment-form" @onsubmit="HandleSubmit" @onsubmit:preventDefault="true">
                <!-- Current Assessment Info Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-info-circle"></i>
                        Thông Tin Hiện Tại
                    </h3>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-hashtag"></i>
                                Mã Đợt Kiểm Tra
                            </label>
                            <div class="info-display">
                                <i class="fas fa-barcode"></i>
                                @assessmentBatch.AssessmentBatchId
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-calendar"></i>
                                Ngày Tạo
                            </label>
                            <div class="info-display">
                                <i class="fas fa-clock"></i>
                                @assessmentBatch.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-toggle-on"></i>
                                Trạng Thái Hiện Tại
                            </label>
                            <div class="status-badge @GetStatusClass(assessmentBatch.Status)">
                                <i class="fas @GetStatusIcon(assessmentBatch.Status)"></i>
                                @assessmentBatch.StatusString
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-user-tie"></i>
                                Người Quản Lý Hiện Tại
                            </label>
                            <div class="info-display">
                                @if (currentManagerInfo != null)
                                {
                                    <i class="fas fa-user-check"></i>
                                    <span>@currentManagerInfo.FullName</span>
                                    <small class="text-muted">(@currentManagerInfo.UserName)</small>
                                }
                                 else if (assessmentBatch.ManagerBy.HasValue && assessmentBatch.ManagerBy != Guid.Empty)
                                {
                                    <i class="fas fa-user-question"></i>
                                    <span class="text-warning">Đang tải thông tin...</span>
                                }
                                else
                                {
                                    <i class="fas fa-user-slash"></i>
                                    <span class="text-muted">Chưa có người quản lý</span>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-users"></i>
                                Số Lượng Tham Gia
                            </label>
                            <div class="info-display">
                                <i class="fas fa-user-check"></i>
                                @assessmentBatch.StudentCount học sinh
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-user-plus"></i>
                                Người Tạo
                            </label>
                            <div class="info-display">
                                @if (!string.IsNullOrEmpty(assessmentBatch.CreatedByName))
                                {
                                    <i class="fas fa-user"></i>
                                    <span>@assessmentBatch.CreatedByName</span>
                                }
                                else
                                {
                                    <i class="fas fa-user"></i>
                                    <span class="text-muted">@assessmentBatch.CreatedBy</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Basic Information Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-clipboard"></i>
                        Thông Tin Cơ Bản
                    </h3>

                    <div class="form-row">
                        <div class="form-group full-width">
                            <label class="form-label">
                                <i class="fas fa-tag"></i>
                                Tên Đợt Kiểm Tra <span class="required">*</span>
                            </label>
                                <div class="info-display">
                                    <i class="fas fa-user-check"></i>
                                    @assessmentBatch.CodeName
                                </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group full-width">
                            <label class="form-label">
                                <i class="fas fa-align-left"></i>
                                Mô Tả Chi Tiết
                            </label>
                            <textarea class="form-control" @bind="updateDto.Description" rows="4"
                                placeholder="Nhập mô tả chi tiết về đợt kiểm tra..."></textarea>
                        </div>
                    </div>
                </div>

                <!-- Schedule Information Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-calendar-alt"></i>
                        Thời Gian Thực Hiện
                    </h3>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-play"></i>
                                Ngày Bắt Đầu <span class="required">*</span>
                            </label>
                            <input type="datetime-local" class="form-control" @bind="updateDto.StartDate" required />
                        </div>

                        
                    </div>
                </div>

                <!-- Status Management Section -->
                <div class="form-section">
                    <h3 class="section-title">
                        <i class="fas fa-tasks"></i>
                        Quản Lý Trạng Thái
                    </h3>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-toggle-on"></i>
                                Trạng Thái Mới <span class="required">*</span>
                            </label>
                            <select class="form-select" @bind="updateDto.Status" required>
                                    <option value="">Chọn trạng thái</option>
                                    <option value="0">Nháp</option>
                                    <option value="1">Đã được phê duyệt</option>
                                    <option value="2">Đang tiến hành kiểm tra</option>
                                    <option value="3">Hoàn tất kiểm tra</option>
                                    <option value="-1">Lỗi phải tổ chức lại</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label class="form-label">
                                <i class="fas fa-user-tie"></i>
                                Người Quản Lý Mới
                            </label>
                            <div class="manager-selection">
                                <div class="current-manager mb-2">
                                    <small class="text-muted">Hiện tại: </small>
                                    @if (currentManagerInfo != null)
                                    {
                                        <span class="badge bg-info">
                                            <i class="fas fa-user"></i>
                                            @currentManagerInfo.FullName (@currentManagerInfo.UserName)
                                        </span>
                                    }
                                        else if (assessmentBatch.ManagerBy.HasValue && assessmentBatch.ManagerBy != Guid.Empty)
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-spinner fa-spin"></i>
                                            Đang tải...
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-user-slash"></i>
                                            Chưa có
                                        </span>
                                    }
                                </div>
                                
                                <select class="form-select" @bind="selectedManagerId">
                                    <option value="">-- Chọn người quản lý mới --</option>
                                    <option value="remove">🗑️ Xóa người quản lý hiện tại</option>
                                    @if (availableManagers != null)
                                    {
                                        @foreach (var manager in availableManagers)
                                        {
                                            <option value="@manager.UserId">
                                                👤 @manager.FullName (@manager.UserName)
                                            </option>
                                        }
                                    }
                                </select>
                                
                                @if (isLoadingManagers)
                                {
                                    <small class="text-muted">
                                        <i class="fas fa-spinner fa-spin"></i>
                                        Đang tải danh sách người quản lý...
                                    </small>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Footer Actions -->
        <div class="card-footer">
            <div class="action-buttons">
                <button type="button" class="btn btn-secondary" @onclick="GoBack">
                    <i class="fas fa-arrow-left"></i>
                    Quay lại
                </button>
                <button type="button" class="btn btn-reset" @onclick="ResetForm">
                    <i class="fas fa-undo"></i>
                    Khôi Phục
                </button>
                <button type="button" class="btn btn-primary" @onclick="HandleSubmit" disabled="@isSubmitting">
                    @if (isSubmitting)
                    {
                        <i class="fas fa-spinner fa-spin"></i>
                        <text>Đang cập nhật...</text>
                    }
                    else
                    {
                        <i class="fas fa-save"></i>
                        <text>Cập Nhật</text>
                    }
                </button>
            </div>
        </div>
    </div>
    }
</div>

@code {
    [Parameter] public string AssessmentBatchId { get; set; } = string.Empty;

    private bool isLoading = true;
    private bool isSubmitting = false;
    private bool isLoadingManagers = false;
    private string errorMessage = string.Empty;
    private string managerGuidString = string.Empty;
    private string selectedManagerId = string.Empty;

    private AssessmentBatchInfoDto? assessmentBatch = null;
    private UpdateAssessmentBatchDto updateDto = new();
    private UserInfoDto? currentManagerInfo = null;
    private List<UserInfoDto>? availableManagers = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadAssessmentBatch();
        await LoadAvailableManagers();
    }

    private async Task LoadAssessmentBatch()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;

            var response = await AssessmentBatchApiClient.GetAssessmentBatchByIdAsync(AssessmentBatchId);
            if (response != null)
            {
                assessmentBatch = response;
                
                // Initialize update DTO with current values
                updateDto = new UpdateAssessmentBatchDto
                {
                    CodeName = assessmentBatch.CodeName ?? string.Empty,
                    Description = assessmentBatch.Description ?? string.Empty,
                    StartDate = assessmentBatch.StartDate,
                    EndDate = assessmentBatch.EndDate,
                    Status = assessmentBatch.Status,
                    ManagerBy = assessmentBatch.ManagerBy
                };

                // Set manager GUID string if exists
                if (assessmentBatch.ManagerBy.HasValue)
                {
                    managerGuidString = assessmentBatch.ManagerBy.Value.ToString();
                    // Load current manager info
                    await LoadCurrentManagerInfo(assessmentBatch.ManagerBy.Value);
                }
            }
            else
            {
                errorMessage = "Không thể tải thông tin đợt kiểm tra";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadCurrentManagerInfo(Guid managerId)
    {
        try
        {
            var response = await UserApiClient.GetUserByIdAsync(managerId);
            if (response.IsSuccess && response.Data != null)
            {
                currentManagerInfo = response.Data;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading manager info: {ex.Message}");
        }
    }

    private async Task LoadAvailableManagers()
    {
        try
        {
            isLoadingManagers = true;
            
            // Get users with security level >= 5 (managers/admins)
            var response = await UserApiClient.GetUsersByCompareSecurityLevelAsync(5);
            if (response.IsSuccess && response.Data != null)
            {
                availableManagers = response.Data;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading available managers: {ex.Message}");
        }
        finally
        {
            isLoadingManagers = false;
            StateHasChanged();
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            isSubmitting = true;
            errorMessage = string.Empty;

            // Validate form
            if (string.IsNullOrWhiteSpace(updateDto.CodeName))
            {
                errorMessage = "Tên đợt kiểm tra không được để trống";
                return;
            }

            // if (updateDto.StartDate >= updateDto.EndDate)
            // {
            //     errorMessage = "Ngày kết thúc phải sau ngày bắt đầu";
            //     return;
            // }

            // Handle manager assignment
            if (!string.IsNullOrWhiteSpace(selectedManagerId))
            {
                if (selectedManagerId == "remove")
                {
                    updateDto.ManagerBy = null;
                }
                else if (Guid.TryParse(selectedManagerId, out var newManagerId))
                {
                    updateDto.ManagerBy = newManagerId;
                }
                else
                {
                    errorMessage = "ID người quản lý không đúng định dạng";
                    return;
                }
            }
            // If no manager selected via dropdown, use the original manager
            else if (assessmentBatch?.ManagerBy.HasValue == true)
            {
                updateDto.ManagerBy = assessmentBatch.ManagerBy;
            }

            // Legacy support for manual GUID input (fallback)
            // if (!string.IsNullOrWhiteSpace(managerGuidString))
            // {
            //     if (Guid.TryParse(managerGuidString, out var managerGuid))
            //     {
            //         updateDto.ManagerBy = managerGuid;
            //     }
            //     else
            //     {
            //         errorMessage = "GUID người quản lý không đúng định dạng";
            //         return;
            //     }
            // }

            var response = await AssessmentBatchApiClient.UpdateAssessmentBatchAsync(AssessmentBatchId, updateDto);
            if (response != null)
            {
               // await JSRuntime.InvokeAsync<object>("showToastAndWait", "Cập nhật thành công!", "success", 1500);
                Navigation.NavigateTo($"/assessmentbatch");
            }
            else
            {
                errorMessage = "Cập nhật thất bại";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }

    private void ResetForm()
    {
        if (assessmentBatch == null) return;
        
        updateDto = new UpdateAssessmentBatchDto
        {
            CodeName = assessmentBatch.CodeName ?? string.Empty,
            Description = assessmentBatch.Description ?? string.Empty,
            StartDate = assessmentBatch.StartDate,
            EndDate = assessmentBatch.EndDate,
            Status = assessmentBatch.Status,
            ManagerBy = assessmentBatch.ManagerBy
        };

        if (assessmentBatch.ManagerBy.HasValue)
        {
            managerGuidString = assessmentBatch.ManagerBy.Value.ToString();
        }
        else
        {
            managerGuidString = string.Empty;
        }

        // Reset manager selection
        selectedManagerId = string.Empty;

        errorMessage = string.Empty;
        StateHasChanged();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/assessmentbatch");
    }

    private string GetStatusClass(int status)
    {
        return status switch
        {
            0 => "draft",        // Nháp
            1 => "active",       // Đang tiến hành
            2 => "completed",    // Hoàn thành
            3 => "completed",    // Đã hủy
            -1 => "disabled",    // Vô hiệu hóa
            _ => "unknown"
        };
    }

    private string GetStatusIcon(int status)
    {
        return status switch
        {
            0 => "fa-edit",           // Nháp
            1 => "fa-play-circle",    // Đang tiến hành
            2 => "fa-check-circle",   // Hoàn thành
            3 => "fa-ban",            // Đã hủy
            -1 => "fa-times-circle",  // Vô hiệu hóa
            _ => "fa-question-circle"
        };
    }
}
